[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nanovla"
dynamic = ["version"]
description = "A minimal Vision-Language-Action framework"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "nanoVLA Team", email = "team@nanovla.ai"},
]
maintainers = [
    {name = "nanoVLA Team", email = "team@nanovla.ai"},
]
keywords = ["vision", "language", "action", "robotics", "vlm", "vla", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.40.0",
    "Pillow>=8.0.0",
    "numpy>=1.20.0",
    "typing-extensions>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/nanovla/nanovla"
Documentation = "https://nanovla.readthedocs.io/"
Repository = "https://github.com/nanovla/nanovla"
"Bug Tracker" = "https://github.com/nanovla/nanovla/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]
vision = [
    "torchvision>=0.15.0",
    "opencv-python",
    "albumentations",
]
robotics = [
    "gym>=0.21.0",
    "pybullet",
    "mujoco",
]
training = [
    "wandb",
    "tensorboard",
    "accelerate",
    "datasets",
]
rl = [
    "verl",
    "ray[default]",
]
all = [
    "nanovla[dev,vision,robotics,training]",
]

[project.scripts]
nanovla-train = "nanovla.training.cli:main"
nanovla-eval = "nanovla.evaluation.cli:main"

[tool.setuptools]
package-dir = {"" = "nanovla/src"}

[tool.setuptools.dynamic]
version = {attr = "nanovla.__version__"}

[tool.setuptools.packages.find]
where = ["nanovla/src"]

[tool.setuptools.package-data]
nanovla = [
    "py.typed",
    "**/*.json",
    "**/*.yaml",
    "**/*.yml",
]

# Development tools configuration
[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "torchvision.*",
    "PIL.*",
    "cv2.*",
    "albumentations.*",
    "wandb.*",
    "tensorboard.*",
    "gym.*",
    "pybullet.*",
    "mujoco.*",
    "verl.*",
    "ray.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests", "nanovla/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=nanovla",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests as requiring GPU (deselect with '-m \"not gpu\"')",
    "integration: marks tests as integration tests",
]
